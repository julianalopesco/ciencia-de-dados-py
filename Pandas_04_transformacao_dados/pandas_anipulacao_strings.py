# -*- coding: utf-8 -*-
"""pandas_anipulacao_strings.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xv9Ajyoi-jqDI4lLNKdkHxMKCCyq99tI

## Case: App de delivery que guarda os dados dos cliente em uma planilha, e precisamos manipular alguns **dados** para melhorar a analise para futuros estudos
"""

import pandas as pd

df= pd.read_csv("banco_clientes.csv")
df

"""* Padronizar os nomes dos clientes em letra maiúscula
* Padronizar a coluna de telefones para o formato XX XXXXX-XXXX
* Criar uma coluna apenas com os CEPs
* Ter uma coluna para o rua e outra para o número do endereço do cliente

## Padronizar os nomes em letra maiuscula
"""

df["nome"] = df["nome"].str.upper()
df

"""## Padronizar a coluna de telefones para o formato XX XXXXX-XXXX"""

df.telefone.str.replace("(", "",regex=False)

df.telefone.str.replace("(", "",regex=False).str.replace(")", "",regex=False)

df["telefone"] = df.telefone.str.replace("(", "",regex=False).str.replace(")", "",regex=False)
df

"""## Criar uma coluna apenas com os CEPs"""

df.endereco.str.extract("(\d{5}-\d{3})")

df["cep"] = df.endereco.str.extract("(\d{5}-\d{3})")
df

df.endereco.str.replace('\d{5}-\d{3}', '', regex=True)

df['endereco'] = df.endereco.str.replace(r'\d{5}-\d{3}', '', regex=True).str.strip()
df

"""## Ter uma coluna para o Rua e outra para o número do endereço do cliente"""

df.endereco.str.split(',', expand=True)

df.endereco.str.split('\s(?=\d+$)', expand=True)

df.endereco.str.replace(",","").str.split('\s(?=\d+$)', expand=True)

df[["rua","numero"]] = df.endereco.str.replace(",","").str.split('\s(?=\d+$)',regex=True, expand=True)

df

df = df.drop(["endereco"], axis=1)
df

